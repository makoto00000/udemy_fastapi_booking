"""Add start and end datetime Columns bookings table

Revision ID: 09c1f74b1dec
Revises: 6c8613459719
Create Date: 2024-09-26 00:33:54.712109

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '09c1f74b1dec'
down_revision: Union[str, None] = '6c8613459719'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('bookings', sa.Column('reserved_num', sa.Integer(), nullable=False))
    op.add_column('bookings', sa.Column('start_date_time', sa.DateTime(), nullable=False))
    op.add_column('bookings', sa.Column('end_date_time', sa.DateTime(), nullable=False))

    # 予約する時間が15分刻みであることを保証するCHECK制約
    op.create_check_constraint(
        "check_15_minute_interval",
        "bookings",
        "EXTRACT(MINUTE FROM start_date_time) % 15 = 0 AND "
        "EXTRACT(MINUTE FROM end_date_time) % 15 = 0"
    )

    # 利用時間が9:00~20:00の範囲内であることを保証するCHECK制約
    op.create_check_constraint(
        "check_time_range",
        "bookings",
        "EXTRACT(HOUR FROM start_date_time) >= 9 AND "
        "EXTRACT(HOUR FROM start_date_time) < 20 AND "
        "EXTRACT(HOUR FROM end_date_time) >= 9 AND "
        "EXTRACT(HOUR FROM end_date_time) <= 20"
    )

    # 開始時間と終了時間が同じ日付であることを保証するCHECK制約
    op.create_check_constraint(
        "check_same_day",
        "bookings",
        "DATE(start_date_time) = DATE(end_date_time)"
    )

    # 開始時間が終了時間よりも前であることを保証するCHECK制約
    op.create_check_constraint(
        "check_start_before_end",
        "bookings",
        "start_date_time < end_date_time"
    )
    # ### end Alembic commands ###



def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('bookings', 'end_date_time')
    op.drop_column('bookings', 'start_date_time')
    op.drop_column('bookings', 'reserved_num')
    op.drop_constraint("check_15_minute_interval", "bookings", type_="check")
    op.drop_constraint("check_time_range", "bookings", type_="check")
    op.drop_constraint("check_same_day", "bookings", type_="check")
    op.drop_constraint("check_start_before_end", "bookings", type_="check")
    # ### end Alembic commands ###
